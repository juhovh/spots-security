<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright 2005-2008 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This code is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * only, as published by the Free Software Foundation.
 * 
 * This code is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included in the LICENSE file that accompanied this code).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 16 Network Circle, Menlo
 * Park, CA 94025 or visit www.sun.com if you need additional
 * information or have any questions.
 */
-->

<project name="crypto-library-on-desktop" default="make-jars" basedir=".">

    <!--
    
    The master build file lives at: ${sunspot.home}/build.xml.

    If you don't have a sunspot properties file for some reason,
    then you can set the sunspot.home property manually.

        <property name="sunspot.home" value="/opt/sunspot"/>

    The behavior of the build is also controled through properties.
    For example, to use a different source directory, you can set
    the property 'src.dir'.

        <property name="src.dir" value="mysrc"/>

    For a complete listing of properties that are used, and their
    explanations, see the file ${sunspot.home}/default.properties.

    -->

    <property name="user.properties.file" value="build.properties"/>
    <property file="${user.home}/.sunspot.properties"/>
    <import file="${sunspot.home}/build.xml"/>

    <!--

    This file is a temporary host application build file.  The mechanism for
    building host applications is still being sorted out, but it will get
    more simpler and more straight-forward.  Above, the property main.class
    determines what class is run as your main method.  The property  main.args
    determines the arguments that are passed to your main method.

    You can run this file as follows:
        ant -Dmain.class=com.sun... -Dmain.args=....
    -->
        <target name="make-jars" depends="make-host-jar">
            <echo>Copying crypto-extensions.xml to ${sunspot.lib}</echo>
            <copy todir="${sunspot.lib}">
                <fileset dir=".">
                    <include name="crypto-extensions.xml"/>
                </fileset>
            </copy>
        </target>
</project>
